@page "/phrase/{phraseId:int}"
@inject HttpClient http
@inject NavigationManager navigation

@if (phrase == null)
{
    <p>Loading...</p>
}
else
{
    <div class="card edit-detail">        
        <div class="card-content">
            <div class="content">
                @if (phrase.Id != 0)
                {
                    <label class="label" for="id">id</label>
                    <input name="id"
                           class="input"
                           value="@phrase.Id"
                           readonly="readonly" />
                }
                <InputDetail Name="Texto"
                             Placeholder="Escribe aquí tu frase"
                             @bind-Value="phrase.Text" />                                
            </div>
        </div>
        <footer class="card-footer ">
            <ButtonFooter Class="cancel-button"
                          IconClasses="fas fa-undo"
                          OnClick="@CancelPhrase"
                          Label="Cancelar" />
            <ButtonFooter Class="save-button"
                          IconClasses="fas fa-save"
                          OnClick="@Save"
                          Label="Enviar" />
        </footer>
    </div>
}

@code {
    private Phrase phrase;

    [Parameter] public int PhraseId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (PhraseId == 0)
        {
            phrase = new Phrase();
        }
        else
        {
            var phrases = await http.GetFromJsonAsync<IEnumerable<Phrase>>("api/phrases");
            phrase = phrases.First(p => p.Id == PhraseId);
        }
    }

    private void CancelPhrase()
    {
        navigation.NavigateTo("/");
    }

    private async Task Save()
    {
        if (phrase.Id == 0)
        {
            await http.PostAsJsonAsync("api/phrases", phrase);
        }
        else
        {
            await http.PutAsJsonAsync("api/phrases", phrase);
        }
        navigation.NavigateTo("/");
    }
}