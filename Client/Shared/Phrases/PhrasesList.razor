@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div>@ErrorMessage</div>
}
else if (Phrases != null && Phrases.Count() > 0)
{
    
    <ul class="list">
        @foreach (var phrase in Phrases)
        {
            <li role="presentation">                

                <div class="card">
                    <div class="card-body">
                        <header class="card-title">@phrase.Text</header>
                            <p class="card-text">
                                @phrase.Text
                                Idioma: @phrase.Language <br/>
                                @phrase.TextTranslated <br/>
                                </p>  
                                <header>Entidades del texto:</header>
                                <p class="card-text">
                                @phrase.Entities <br/>
                                </p>           
                        <ButtonFooter Class="delete-item"
                                      IconClasses="fas fa-trash"
                                      OnClick="@(async _ => await DeletePhrase.InvokeAsync(phrase))"
                                      Label="Eliminar" />
                    </div>
                </div>
            </li>
            
        }
    </ul>
}
else
{
    <div>Loading data...</div>
}
@code {
    [Parameter] public IEnumerable<Phrase> Phrases { get; set; }
    [Parameter] public EventCallback<Phrase> DeletePhrase { get; set; }
    [Parameter] public EventCallback<Phrase> SelectPhrase { get; set; }
    [Parameter] public string ErrorMessage { get; set; }
}